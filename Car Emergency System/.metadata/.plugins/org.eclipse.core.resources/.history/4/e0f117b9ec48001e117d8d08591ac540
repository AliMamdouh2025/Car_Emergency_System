/******************************************************************************
 *
 * Module: Application
 *
 * File Name: Application.h
 *
 * Description: Application file
 *
 * Author: Ali Mamdouh
 *
 *******************************************************************************/

#ifndef APPLICATION_H_
#define APPLICATION_H_

/*******************************************************************************
 *                                Definitions                                  *
 *******************************************************************************/
/*States*/
#define ADDRESS_STATE 0
#define NORMAL_STATE 0
#define EMERGENCY_STATE 1
#define ABNORMAL_STATE 2

/*Led states*/
#define GREEN_STATE 0
#define YELLOW_STATE 1
#define RED_STATE 2

/*Machine states*/
#define MACHINE_STOP 155
#define ABNORMAL_UART 160

/*LM35*/
#define LM35_VOLTAGE_LIMIT 150





/*******************************************************************************
 *                      Global Variables                                       *
 *******************************************************************************/
/*Flags*/
boolean Button_Flag = 0;
boolean Abnormal_Flag = 0;

/*Counters*/
uint8 counter = 0;





/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/
void Timer_On(void(*a_ptr)(void));

void Emergency_Timer(void);
void LED(void);
void UartReceiveMessage(void);
void Machine_Stop(uint8 Temp);

void Normal_State(void);
void Emergency_State(void);
void Abnormal_State(void);
void init(void)
{
	/*Enable Global Interrupts */
	SREG |= (1<<7);

	/*Initialize timer */
	//void Timer_On(Emergency_Timer);

	/* Initialize the UART driver with Baud-rate = 9600 bits/sec */
	UART_init(9600);
	UartReceive_setCallBack(UartReceiveMessage);

	/* initialize ADC driver */
	ADC_ConfigType adcConfig = {ADC_REF_VOLT_CODE, F_CPU_8};
	ADC_init(&adcConfig);

	/* initialize EEPROM driver*/
	Internal_EEPROM_init();
	EEPROM_write(ADDRESS_STATE, NORMAL_STATE);

	/* initialize DcMotor driver*/
	DcMotor_Init();

	/* initialize Button driver*/
	Button_Init();
	Button_setCallBack(LED);


}







#endif /* APPLICATION_H_ */
